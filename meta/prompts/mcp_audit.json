{
  "version": "v0.2.9",
  "spec_ref": "docs/mcp_spec.md#v0-2-9",
  "task": "Audit synesthetic-mcp repo state (v0.2.9 features, aligned to schemas v0.7.3)",
  "objective": "Verify implementation, tests, and documentation match MCP Spec v0.2.9. Confirm canonical host usage, TCP default mode (port 8765), environment-driven schema resolution, and submodule alignment with synesthetic-schemas@8286df4. Report Present/Missing/Divergent with explicit file evidence and regenerate AGENTS.md snapshot.",
  "constraints": {
    "style": "deterministic, terse, Markdown headings with bullets/tables",
    "rules": [
      "Present = implemented and covered by tests/docs",
      "Missing = required by spec but absent",
      "Divergent = implemented but differs in naming or behavior",
      "All findings must cite file:line or test section explicitly",
      "meta/output/mcp_state.md and AGENTS.md must be overwritten with non-empty content",
      "Canonical schema host/version: assets validated via top-level \"$schema\" beginning with https://delk73.github.io/synesthetic-schemas/schema/${LABS_SCHEMA_VERSION}/, default 0.7.3",
      "Schema resolver supports canonical remote URLs, local cache, rejects traversal, disallows non-canonical relative paths",
      "Reject legacy schema keys ('schema', '$schemaRef') → validation_failed @ '/$schema'",
      "Env parity: LABS_SCHEMA_BASE and LABS_SCHEMA_VERSION read, logged, and used in resolution",
      "Submodule parity: libs/synesthetic-schemas pinned at audited commit (8286df4a4197f2fb45a8bd6c4a805262cba2e934) verified via make preflight",
      "Schema governance parity achieved through make preflight (normalize → publish → validate canonical schemas)",
      "Transports: STDIO, Socket, TCP implemented; TCP default; 1 MiB guard enforced; gRPC/HTTP absent",
      "Default mode: MCP_MODE defaults to tcp; up.sh starts container in TCP mode when unset",
      "Payload cap: 1 MiB enforced across transports; failing test present",
      "Alias: 'validate' → 'validate_asset' with deprecation warning",
      "Batching: validate_many honors MCP_MAX_BATCH",
      "Determinism: listings, diffs, and error ordering sorted lexicographically",
      "Security: socket/tcp least-privilege; container non-root",
      "Lifecycle: STDIO exits on stdin close; Socket/TCP log readiness; shutdown unlink and close",
      "Logging: ready/shutdown logs include mode, host/port, schemas_base, schema_version, cache_dir; ISO-8601 timestamps (ms precision); stderr only",
      "Signals: SIGINT/SIGTERM yield exit codes -2 / -15; shutdown logs emitted before exit",
      "Ready file: exactly '<pid> <ISO8601 timestamp>'",
      "Golden examples: list_schemas, get_schema, validate_asset + alias validate, get_example ok/invalid, diff_assets, malformed JSON-RPC",
      "Docs include TCP 'nc 127.0.0.1 8765' example and canonical host/version env table"
    ],
    "sections": [
      "Summary of repo state",
      "Top gaps & fixes (3-5 bullets)",
      "Alignment with mcp_spec.md (table: Spec item → Status → Evidence)",
      "Submodule alignment (libs/synesthetic-schemas commit hash, version.json match)",
      "Transports",
      "STDIO entrypoint & process model",
      "Socket server (multi-client handling, perms, unlink, logs)",
      "TCP server (binding, perms, multi-client, shutdown logs)",
      "Lifecycle signals",
      "Shutdown logging invariant",
      "Ready file format",
      "Golden request/response examples",
      "Payload size guard",
      "Schema validation contract",
      "Schema resolver (remote/cached, traversal guards)",
      "Batching",
      "Determinism & ordering",
      "Logging hygiene (fields, ISO time, stderr separation)",
      "Container & health (non-root, probes)",
      "Environment variables (LABS_SCHEMA_BASE, LABS_SCHEMA_VERSION, MCP_MODE, MCP_HOST/PORT, MCP_MAX_BATCH)",
      "Documentation accuracy (canonical host/version, TCP nc example)",
      "Detected divergences",
      "Recommendations"
    ]
  },
  "scope": {
    "files": [
      "README.md",
      "docs/mcp_spec.md",
      "docker-compose.yml",
      "Dockerfile",
      "up.sh",
      "mcp/**/*.py",
      "tests/**/*.py",
      "libs/synesthetic-schemas",
      "meta/",
      ".env",
      ".env.example"
    ]
  },
  "output": {
    "paths": [
      "meta/output/mcp_state.md",
      "AGENTS.md"
    ],
    "format": "Markdown",
    "must_write": true,
    "stdout_optional": true
  },
  "exit_criteria": [
    "meta/output/mcp_state.md and AGENTS.md written and non-empty",
    "All v0.2.9 checkpoints verified with evidence",
    "Submodule commit equals audited hash (8286df4a4197f2fb45a8bd6c4a805262cba2e934)",
    "LABS_SCHEMA_BASE and LABS_SCHEMA_VERSION logged and in use",
    "TCP default confirmed in startup logs and up.sh (port 8765)",
    "Canonical schema resolution and cache paths verified",
    "STDIO, Socket, TCP validated for lifecycle, logging, and signals",
    "Payload guard enforced and tested",
    "Deterministic order confirmed",
    "Docs reflect canonical host/version and TCP example"
  ]
}
