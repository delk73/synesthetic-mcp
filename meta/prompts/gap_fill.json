{
  "task": "Implement validate_asset in MCP",
  "objective": "Add full validate_asset support so synesthetic-mcp matches docs/mcp_spec.md v0.2.3 and responds correctly to Labs Critic calls.",
  "gaps": [
    {
      "id": "validate_asset_missing",
      "description": "MCP responds with {\"ok\":false, \"reason\":\"unsupported\"} because validate_asset is not implemented.",
      "changes": [
        "In mcp/validate.py, implement validate_asset(asset, schema) using jsonschema Draft 2020-12",
        "Explicitly check schema param; if missing or empty, return {\"ok\":false, \"reason\":\"validation_failed\", \"errors\":[{\"path\":\"\",\"msg\":\"schema_required\"}]}",
        "Return {\"ok\":true} when validation passes",
        "Return {\"ok\":false, \"reason\":\"validation_failed\", \"errors\":[...]} when validation fails; errors sorted by path then msg",
        "In mcp/stdio_main.py, register validate_asset in the JSON-RPC dispatcher so it no longer falls through to unsupported",
        "Add regression tests in tests/test_validate.py to cover: valid asset, invalid asset, missing schema param",
        "Update docs/mcp_spec.md if needed to confirm response shape and error reasons are spec-compliant"
      ]
    }
  ],
  "constraints": {
    "style": "deterministic, concise diffs",
    "rules": [
      "No new dependencies",
      "Tests must pass",
      "Align code, tests, and docs with spec v0.2.3"
    ]
  },
  "exit_criteria": [
    "validate_asset implemented in mcp/validate.py and exposed via STDIO",
    "Valid assets return {\"ok\":true}",
    "Invalid assets return {\"ok\":false, \"reason\":\"validation_failed\"} with sorted RFC6901 errors",
    "Missing schema param returns {\"ok\":false, \"reason\":\"validation_failed\", \"errors\":[{\"path\":\"\",\"msg\":\"schema_required\"}]}",
    "Tests in tests/test_validate.py cover all three paths",
    "All tests pass after changes"
  ]
}
