{
  "task": "Add missing test coverage for MCP v0.2.6",
  "objective": "Close test gaps without touching runtime or docs. Ensure TCP validate flows, socket permission defaults, and backend HTTP error mapping are covered.",
  "changes": [
    {
      "id": "tcp_validate_test",
      "description": "Add an integration test that sends `validate_asset` (and alias) over TCP.",
      "edits": [
        "tests/test_tcp.py: add a case connecting to the TCP server, sending a minimal valid asset against 'synesthetic-asset', and asserting `{ok:true}`.",
        "Include alias 'validate' call and assert deprecation warning is captured on stderr."
      ]
    },
    {
      "id": "socket_mode_test",
      "description": "Verify Unix Domain Socket file permissions default to 0600.",
      "edits": [
        "tests/test_socket.py: after server readiness, use `os.stat` on MCP_SOCKET_PATH and assert `stat.S_IMODE(...) == 0o600`."
      ]
    },
    {
      "id": "backend_http_error_test",
      "description": "Cover the httpx.HTTPError â†’ 503 mapping in populate_backend.",
      "edits": [
        "tests/test_backend.py: mock `httpx.post` to raise `httpx.HTTPError`, call `populate_backend`, and assert result matches `{ok:false, reason:'backend_error', status:503}`."
      ]
    }
  ],
  "constraints": {
    "rules": [
      "No edits outside tests/; runtime and docs remain untouched.",
      "Use pytest stdlib mocking (`monkeypatch` or `pytest.raises`) only; no new deps.",
      "Keep tests deterministic and aligned with spec v0.2.6.",
      "Update existing test files in-place (no new modules unless necessary)."
    ]
  },
  "exit_criteria": [
    "TCP validate integration test passes and captures alias warning.",
    "Socket mode assertion proves default 0600 permission in CI.",
    "Backend test surfaces 503 mapping from simulated httpx error.",
    "All tests green with no regressions; coverage report shows new lines covered."
  ]
}
