{
  "task": "Close MCP v0.2.5 divergences",
  "objective": "Add missing tests for alias deprecation warning and payload size guards, and introduce golden request/response examples to complete v0.2.5 exit criteria.",
  "changes": [
    {
      "id": "alias_warning_test",
      "description": "Add test to confirm 'validate' alias emits deprecation warning to stderr.",
      "edits": [
        "tests/test_stdio.py: add a case that calls the 'validate' alias and captures stderr, asserting the warning message is present."
      ]
    },
    {
      "id": "payload_guard_tests",
      "description": "Add explicit oversize payload tests for STDIO and validate_many.",
      "edits": [
        "tests/test_stdio.py: add test that sends oversized JSON-RPC request (>1 MiB) and asserts 'payload_too_large' error.",
        "tests/test_validate.py: add test that passes oversized list to validate_many and asserts rejection with reason 'validation_failed'."
      ]
    },
    {
      "id": "golden_examples",
      "description": "Create golden request/response examples for all MCP methods.",
      "edits": [
        "tests/fixtures/golden.jsonl: add canonical NDJSON frames covering list_schemas, get_schema, validate_asset, validate alias, validate_many, get_example (success + validation_failed), diff_assets, populate_backend, and malformed JSON-RPC.",
        "tests/test_golden.py: add smoke test that loads golden.jsonl, feeds each request into MCP server, and asserts outputs match expected responses."
      ]
    }
  ],
  "constraints": {
    "rules": [
      "No new dependencies; use only pytest and stdlib.",
      "Golden examples must match spec shapes exactly.",
      "Tests must cover alias warning, oversize guards, and golden flows.",
      "All existing tests must remain green."
    ]
  },
  "exit_criteria": [
    "tests/test_stdio.py includes stderr assertion for alias deprecation warning.",
    "tests/test_validate.py and tests/test_stdio.py include explicit oversize payload rejection cases.",
    "tests/fixtures/golden.jsonl contains full canonical request/response set.",
    "tests/test_golden.py verifies golden fixtures run cleanly.",
    "All tests pass and v0.2.5 audit re-run shows no divergences."
  ]
}
