{
  "task": "Containerize synesthetic-mcp and provide a simple integrated test runner",
  "objective": "Create a minimal Dockerfile + docker-compose + test.sh for synesthetic-mcp. The goal is to spin up the MCP server container and run pytest inside it to verify deterministic behavior.",
  "constraints": {
    "base_image": "python:3.11-slim",
    "deps": "install from requirements.txt, then pip install -e .",
    "runtime": "pytest run as default CMD for test container",
    "style": "KISS, minimal deps, no DB or Redis required",
    "env": "Allow SYN_SCHEMAS_DIR, SYN_EXAMPLES_DIR, SYN_BACKEND_URL to be set via docker-compose environment",
    "output": [
      "Dockerfile",
      "docker-compose.yml",
      "test.sh (bash script that builds, runs pytest, and reports results)"
    ]
  },
  "files_required": {
    "Dockerfile": [
      "FROM python:3.11-slim",
      "WORKDIR /app",
      "COPY requirements.txt .",
      "RUN pip install --no-cache-dir -r requirements.txt",
      "COPY . .",
      "RUN pip install -e .",
      "CMD [\"pytest\", \"-q\"]"
    ],
    "docker-compose.yml": [
      "version: '3.9'",
      "services:",
      "  mcp:",
      "    build: .",
      "    environment:",
      "      - SYN_SCHEMAS_DIR=/app/tests/fixtures/schemas",
      "      - SYN_EXAMPLES_DIR=/app/tests/fixtures/examples",
      "    volumes:",
      "      - .:/app",
      "    command: pytest -q"
    ],
    "test.sh": [
      "#!/bin/bash",
      "set -e",
      "echo 'Building MCP container...'",
      "docker compose build",
      "echo 'Running pytest inside MCP container...'",
      "docker compose run --rm mcp",
      "echo 'âœ… MCP tests passed'"
    ]
  },
  "exit_criteria": [
    "`./test.sh` builds the container, runs pytest, and exits 0 if all tests pass",
    "Editable install works inside container (`import mcp`)",
    "Environment overrides are supported via docker-compose.yml"
  ]
}
