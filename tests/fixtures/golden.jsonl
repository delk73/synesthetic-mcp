{"description": "list_schemas", "request": {"jsonrpc": "2.0", "id": 1, "method": "list_schemas", "params": {}}, "response": {"jsonrpc": "2.0", "id": 1, "result": {"ok": true, "schemas": [{"name": "asset", "version": "1.0.0", "path": "tests/fixtures/schemas/asset.json"}]}}}
{"description": "get_schema", "request": {"jsonrpc": "2.0", "id": 2, "method": "get_schema", "params": {"name": "asset"}}, "response": {"jsonrpc": "2.0", "id": 2, "result": {"ok": true, "schema": {"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://example.test/asset.schema.json", "version": "1.0.0", "title": "Asset", "type": "object", "properties": {"id": {"type": "string", "pattern": "^[a-z0-9_-]{3,32}$"}, "name": {"type": "string", "minLength": 1}, "tags": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}, "required": ["id", "name"], "additionalProperties": false}, "version": "1.0.0"}}}
{"description": "validate_asset", "request": {"jsonrpc": "2.0", "id": 3, "method": "validate_asset", "params": {"asset": {"$schema": "jsonschema/asset.schema.json", "id": "asset-1", "name": "Asset One"}}}, "response": {"jsonrpc": "2.0", "id": 3, "result": {"ok": true, "errors": []}}}
{"description": "validate_alias", "request": {"jsonrpc": "2.0", "id": 4, "method": "validate", "params": {"asset": {"$schema": "jsonschema/asset.schema.json", "id": "asset-1", "name": "Asset One"}}}, "response": {"jsonrpc": "2.0", "id": 4, "result": {"ok": true, "errors": []}}, "stderr_contains": "reason=deprecated_alias"}
{"description": "validate_many", "request": {"jsonrpc": "2.0", "id": 5, "method": "validate_many", "params": {"assets": [{"$schema": "jsonschema/asset.schema.json", "id": "asset-1", "name": "Asset One"}, {"$schema": "jsonschema/asset.schema.json", "id": "asset-2", "name": ""}]}}, "response": {"jsonrpc": "2.0", "id": 5, "result": {"ok": false, "results": [{"ok": true}, {"ok": false, "errors": [{"path": "/name", "msg": "'' should be non-empty"}], "reason": "validation_failed"}]}}}
{"description": "get_example_ok", "request": {"jsonrpc": "2.0", "id": 6, "method": "get_example", "params": {"path": "AssetExample.json"}}, "response": {"jsonrpc": "2.0", "id": 6, "result": {"ok": true, "example": {"$schema": "jsonschema/asset.schema.json", "id": "asset-1", "name": "Asset One", "tags": ["primary"]}, "schema": "asset", "validated": true}}}
{"description": "get_example_invalid", "request": {"jsonrpc": "2.0", "id": 7, "method": "get_example", "params": {"path": "InvalidExample.json"}}, "response": {"jsonrpc": "2.0", "id": 7, "result": {"ok": false, "reason": "validation_failed", "errors": [{"path": "/", "msg": "'name' is a required property"}, {"path": "/id", "msg": "'' does not match '^[a-z0-9_-]{3,32}$'"}, {"path": "/tags", "msg": "['duplicate', 'duplicate'] has non-unique elements"}]}}}
{"description": "diff_assets", "request": {"jsonrpc": "2.0", "id": 8, "method": "diff_assets", "params": {"base": {"id": "asset-1", "name": "Asset One"}, "new": {"id": "asset-1", "name": "Asset Two", "tags": ["primary"]}}}, "response": {"jsonrpc": "2.0", "id": 8, "result": {"ok": true, "patch": [{"op": "replace", "path": "/name", "value": "Asset Two"}, {"op": "add", "path": "/tags", "value": ["primary"]}]}}}
{"description": "populate_backend", "request": {"jsonrpc": "2.0", "id": 9, "method": "populate_backend", "params": {"asset": {"$schema": "jsonschema/asset.schema.json", "id": "asset-3", "name": "Asset Three"}, "validate_first": false}}, "response": {"jsonrpc": "2.0", "id": 9, "result": {"ok": false, "reason": "unsupported", "detail": "backend disabled"}}}
{"description": "malformed", "raw_request": "not json", "response": {"jsonrpc": "2.0", "id": null, "error": {"code": -32603, "message": "Expecting value: line 1 column 1 (char 0)"}}}
